<?xml version="1.0" encoding="UTF-8"?>
<module name="module-error-handler-plugin"
	category="SELECT"
	doc:description="This module provides common error handling for APIs"
	xmlns="http://www.mulesoft.org/schema/mule/module"
	xmlns:mule="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:core="http://www.mulesoft.org/schema/mule/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		   http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
           http://www.mulesoft.org/schema/mule/module http://www.mulesoft.org/schema/mule/module/current/mule-module.xsd
           http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  
           http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">

	<operation name="process-error" displayName="Process Error">
		<parameters>

			<parameter name="error" type="any"
				displayName="Error Object" defaultValue="#[error]" role="PRIMARY"
				order="1" tab="Advanced"></parameter>

			<parameter name="badRequestError" type="string"
				use="OPTIONAL" displayName="400 Bad Request"
				defaultValue='There was an issue with your request'
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="unauthorizedError" type="string"
				use="OPTIONAL" displayName="401 Unauthorized"
				defaultValue='Authentication was not provided or is invalid'
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="forbiddenError" type="string"
				use="OPTIONAL" displayName="403 Forbidden"
				defaultValue='You are not allowed to make this request'
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="notFoundError" type="string"
				use="OPTIONAL" displayName="404 Not Found"
				defaultValue="The resource is not found" role="BEHAVIOUR"
				tab="Common Errors"></parameter>

			<parameter name="methodNotAllowedError" type="string"
				use="OPTIONAL" displayName="405 Method Not Allowed"
				defaultValue="The method is not allowed on the resource"
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="notAcceptableError" type="string"
				use="OPTIONAL" displayName="406 Not Acceptable"
				defaultValue='The API cannot provide the requested accepted response'
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="timeoutError" type="string" use="OPTIONAL"
				displayName="408 Request Timeout"
				defaultValue='The request to the server has been timed-out'
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="unsupportedMediaTypeError" type="string"
				displayName="415 Unsupported Media Type" use="OPTIONAL"
				defaultValue='Media type not supported'
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="tooManyRequestsError" type="string"
				use="OPTIONAL" displayName="429 Too Many Requests"
				defaultValue='You have made too many requests to the server'
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="expressionError" type="string"
				use="OPTIONAL" displayName="500 Dataweave Expression Error"
				defaultValue="Error with data transformation.  See log for details."
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="serverError" type="string" use="OPTIONAL"
				displayName="500 Internal Server Error (Default)"
				defaultValue='There is a server issue'
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="notImplementedError" type="string"
				displayName="501 Not Implemented" use="OPTIONAL"
				defaultValue='The operation has not been implemented'
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="connectivityError" type="string"
				use="OPTIONAL" displayName="503 Bad Connectivity"
				defaultValue="Service unavailable" role="BEHAVIOUR"
				tab="Common Errors"></parameter>

			<parameter name="appendDefaultErrorDescription"
				type="boolean" use="OPTIONAL"
				displayName="Include Default Error Description" defaultValue="true"
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="customErrorDefinition" type="string"
				use="OPTIONAL" displayName="Custom Error Definitions File"
				summary="Provide the local path to the error definitions file that defines the custom errors.  The file must be Dataweave format (.dwl)."
				role="BEHAVIOUR" tab="Custom Errors"></parameter>
		</parameters>

		<body>
			<mule:set-variable
				value="#[output application/java
					import getErrorTypeAsString from module_error_handler_plugin::common
					---
					getErrorTypeAsString(vars.error.errorType)]"
				doc:name="Error Type" variableName="errorType" />
				
			<mule:logger level="DEBUG"
				category="org.mulesoft.modules.errorhandler"
				message='#[output aplication/java
					---
					"Error type: " ++ (vars.errorType default "") ++ "  Error Description: " ++ (vars.error.description default "")]' />

			<!-- Load the default error definitions. -->
			<mule:set-variable
				value="#[${file::module_error_handler_plugin/defaultErrors.dwl}]"
				doc:name="Default Errors" variableName="defaultErrors" />

			<!-- Dynamically load the custom error definitions. Ignore any issues with loading. -->
			<mule:try doc:name="Try">
				<ee:dynamic-evaluate
					expression='#[if (!isBlank(vars.customErrorDefinition)) readUrl("classpath://" ++ vars.customErrorDefinition, "text/plain") else "{}"]'
					target="customErrors" />
				<mule:error-handler>
					<mule:on-error-continue
						enableNotifications="false" logException="false"
						doc:name="On Error Continue">
						<!-- Directly use error.description here instead of vars; this is an internal error. -->
						<mule:logger level="WARN"
							category="org.mulesoft.modules.errorhandler"
							message='#["There was an issue loading the custom error types file " ++ (vars.customErrorDefinition default "") ++ ": " ++ (error.description default "")]' />
					</mule:on-error-continue>
				</mule:error-handler>
			</mule:try>

			<ee:transform doc:name="Set payload to error">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
import getErrorResponse from module_error_handler_plugin::common
output application/json
var foundError = getErrorResponse(vars.errorType, vars.defaultErrors, vars.customErrors default {})
---
foundError
]]></ee:set-payload>
					<ee:set-attributes><![CDATA[%dw 2.0
import getErrorResponse from module_error_handler_plugin::common
output application/java
var foundError = getErrorResponse(vars.errorType, vars.defaultErrors, vars.customErrors default {})
---
{
	httpStatus: (foundError.status default 500) as Number
}]]></ee:set-attributes>
				</ee:message>
			</ee:transform>
			<mule:logger level="DEBUG"
				category="org.mulesoft.modules.errorhandler"
				message='#[output application/java --- "Error HTTP Status: " ++ attributes.httpStatus default "" ++ "  Error Response: " ++ write(payload, "application/json") default ""]' />
		</body>
		<output type="OutputResponseType"></output>
		<output-attributes type="OutputAttributesType"></output-attributes>
	</operation>

</module>
