<?xml version="1.0" encoding="UTF-8"?>
<module name="Error Handler Plugin" prefix="error-handler-plugin"
	category="SELECT"
	doc:description="This module relies entirely in runtime provided components (no other Plugin dependencies)"
	xmlns="http://www.mulesoft.org/schema/mule/module"
	xmlns:mule="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:core="http://www.mulesoft.org/schema/mule/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		   http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
           http://www.mulesoft.org/schema/mule/module http://www.mulesoft.org/schema/mule/module/current/mule-module.xsd
           http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd             
           http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">

	<property name="apiName" type="any" use="OPTIONAL"
		displayName="API Name" defaultValue="#[Mule::p('api.name')]" />

	<property name="apiVersion" type="any" use="OPTIONAL"
		displayName="API Version" defaultValue="#[Mule::p('api.version')]" />

	<operation name="handle-error" displayName="Process Error">
		<parameters>

			<parameter name="error" type="any" defaultValue="#[error]"
				role="PRIMARY" order="1"></parameter>

			<parameter name="previousErrors" type="any"
				displayName="Previous Error"
				defaultValue="#[error.errorMessage.payload default []]" role="BEHAVIOUR"
				order="1" />

			<parameter name="badRequestError" type="string"
				use="OPTIONAL" displayName="400 Bad Request"
				defaultValue="There was an issue with your request message."
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="unauthorizedError" type="string"
				use="OPTIONAL" displayName="401 Unauthorized"
				defaultValue="You have issues accessing the system" role="BEHAVIOUR"
				tab="Common Errors"></parameter>

			<parameter name="notFoundError" type="string"
				use="OPTIONAL" displayName="404 Not Found"
				defaultValue="The resource is not found" role="BEHAVIOUR"
				tab="Common Errors"></parameter>
				
			<parameter name="methodNotAllowedError" type="string"
				use="OPTIONAL" displayName="405 Method Not Allowed"
				defaultValue="The method is not allowed on the resource" role="BEHAVIOUR"
				tab="Common Errors"></parameter>

			<parameter name="notAcceptableError" type="string"
				use="OPTIONAL" displayName="406 Not Acceptable"
				defaultValue="One of the request or parameters is unacceptable"
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="timeoutError" type="string" use="OPTIONAL"
				displayName="408 Timeout"
				defaultValue="You request to the server has been timed-out"
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="unsupportedMediaTypeError" type="string"
				displayName="415 Unsupported Media Type" use="OPTIONAL"
				defaultValue="Media Type not supported" role="BEHAVIOUR"
				tab="Common Errors"></parameter>

			<parameter name="tooManyRequestsError" type="string"
				use="OPTIONAL" displayName="429 Too Many Requests"
				defaultValue="You have made too many requests to the server"
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="serverError" type="string" use="OPTIONAL"
				displayName="500 Internal Server Error"
				defaultValue="There is a server issue" role="BEHAVIOUR"
				tab="Common Errors"></parameter>

			<parameter name="notImplementedError" type="string"
				displayName="501 Not Implemented" use="OPTIONAL"
				defaultValue="The method has not been implemented" role="BEHAVIOUR"
				tab="Common Errors"></parameter>

			<parameter name="connectivityError" type="string"
				use="OPTIONAL" displayName="503 Bad Connectivity"
				defaultValue="Service unavailable" role="BEHAVIOUR"
				tab="Common Errors"></parameter>

			<parameter name="appendDefaultErrorDescription"
				type="boolean" use="OPTIONAL"
				displayName="Default Error Description" defaultValue="true"
				role="BEHAVIOUR" tab="Common Errors"></parameter>

			<parameter name="correlationId" type="string"
				use="OPTIONAL" displayName="correlationId"
				defaultValue="#[correlationId]" role="BEHAVIOUR" tab="CorrelationId"></parameter>

			<parameter name="customErrors" type="ErrorResponseType"
				displayName="Custom Errors" role="CONTENT" tab="Custom Errors"
				defaultValue="#[{}]"></parameter>

		</parameters>

		<body>

			<mule:set-variable
				value="#[(vars.error.errorType.namespace default '') ++ ':' ++ (vars.error.errorType.identifier default '')]"
				variableName="errorType"></mule:set-variable>

			<mule:set-variable
				value="#[${file::dwl/defaultErrors.dwl}]" doc:name="Default Errors"
				variableName="defaultErrors" />

			<mule:logger level="DEBUG"
				message="Error Type #[vars.errorType]"
				category="org.mulesoft.modules.errorhandler"></mule:logger>
			<mule:logger level="DEBUG"
				message="Previous Errors #[vars.previousErrors]"
				category="org.mulesoft.modules.errorhandler"></mule:logger>
			<mule:logger level="DEBUG"
				message="defaultErrors  #[vars.defaultErrors]"
				category="org.mulesoft.modules.errorhandler"></mule:logger>
			<mule:logger level="DEBUG"
				message="customErrors  #[vars.customErrors]"
				category="org.mulesoft.modules.errorhandler"></mule:logger>

			<ee:transform doc:name="Error Response "
				doc:id="2390a216-b124-40d9-bad9-b45381f43e62">
				<ee:variables>
					<ee:set-variable variableName="errorPayload"><![CDATA[%dw 2.0
output application/json
fun mapError(errorCode, errorMessage, reason) = [{
	code: errorCode,
	reason: reason,
	message: errorMessage
}] 
var customErrors = (if(isEmpty(vars.customErrors)) {} else vars.customErrors) default {}
fun loadErrorConfig(errType) = (customErrors[errType]) match  {
				    case obj if(obj !=null) -> customErrors[errType]
				    else -> vars.defaultErrors[errType] default {}
				    }
var result = loadErrorConfig(vars.errorType) default {}
---
{
	"success": false,
	"apiName": vars.apiName,
	"version": vars.apiVersion,
	"correlationId": vars.correlationId,
	"timestamp": now(),
	"errorDetails": (if(isEmpty(result))
			                     mapError(500,'Internal Server Error', 'UNKNOWN')
							else
							    mapError(result.errorCode, result.defaultError, vars.'errorType')) ++ vars.previousErrors 
}]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<mule:set-payload
				value="#[%dw 2.0 output application/json --- vars.errorPayload]" />
			<ee:transform doc:name="Http Status Code">
				<ee:message>
					<ee:set-attributes><![CDATA[%dw 2.0
output application/java
---
{
	httpStatus: payload.errorDetails.code[0] default 500
}
]]></ee:set-attributes>
				</ee:message>
			</ee:transform>
			<mule:logger level="DEBUG"
				message="ErrorPayload  #[payload]"
				category="org.mulesoft.modules.errorhandler"></mule:logger>

		</body>

		<output type="ErrorResponseType"></output>
		<output-attributes type="OutputAttributesType"></output-attributes>
	</operation>


</module>
